// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	entities "github.com/yossdev/mypoints-rest-api/src/admins/entities"

	uuid "github.com/google/uuid"
)

// PsqlRepository is an autogenerated mock type for the PsqlRepository type
type PsqlRepository struct {
	mock.Mock
}

// CreateAdmin provides a mock function with given fields: payload
func (_m *PsqlRepository) CreateAdmin(payload *entities.Domain) (int64, error) {
	ret := _m.Called(payload)

	var r0 int64
	if rf, ok := ret.Get(0).(func(*entities.Domain) int64); ok {
		r0 = rf(payload)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*entities.Domain) error); ok {
		r1 = rf(payload)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAdminByAgentID provides a mock function with given fields: id
func (_m *PsqlRepository) GetAdminByAgentID(id uuid.UUID) (entities.Domain, error) {
	ret := _m.Called(id)

	var r0 entities.Domain
	if rf, ok := ret.Get(0).(func(uuid.UUID) entities.Domain); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(entities.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SignInWithEmail provides a mock function with given fields: email
func (_m *PsqlRepository) SignInWithEmail(email string) ([2]string, error) {
	ret := _m.Called(email)

	var r0 [2]string
	if rf, ok := ret.Get(0).(func(string) [2]string); ok {
		r0 = rf(email)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([2]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAdmin provides a mock function with given fields: payload
func (_m *PsqlRepository) UpdateAdmin(payload entities.Domain) (int64, error) {
	ret := _m.Called(payload)

	var r0 int64
	if rf, ok := ret.Get(0).(func(entities.Domain) int64); ok {
		r0 = rf(payload)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(entities.Domain) error); ok {
		r1 = rf(payload)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAvatar provides a mock function with given fields: payload
func (_m *PsqlRepository) UpdateAvatar(payload entities.Domain) (int64, error) {
	ret := _m.Called(payload)

	var r0 int64
	if rf, ok := ret.Get(0).(func(entities.Domain) int64); ok {
		r0 = rf(payload)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(entities.Domain) error); ok {
		r1 = rf(payload)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
