name: CI
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  #1 run unit test
  unit-test:
    name: do unit test project mypoints
    runs-on: ubuntu-latest
    steps:
      - name: setup github action #in order to run setup github action first
        uses: actions/checkout@v2
      - name: set-up golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: running unit test
        run: go test ./... -cover

  # job 3: build docker -> push
  build-push-docker:
    name: build image and push to registry
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/checkout@v2
      - name: env file
        env:
          SECRET_ENV: ${{ secrets.ENV }}
        run: |
          touch .env
          echo "$SECRET_ENV" > .env
          chmod 777 .env
      - name: build docker
        run: docker build -t hawtz/mypoints:1.0.0 .
      - name: login registry docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: push image to registry docker hub
        run: docker push hawtz/mypoints:1.0.0

  # job 4: deploy to ec2
  deployment-ec2:
    name: deploy to ec2 from registry docker hub
    runs-on: ubuntu-latest
    needs: build-push-docker
    steps:
      - uses: actions/checkout@v2
      - name: SSH configuration
        env:
          SSH_USER: ${{ secrets.SSH_USER_EC2 }}
          SSH_KEY: ${{ secrets.SSH_KEY_EC2 }}
          SSH_HOST: ${{ secrets.SSH_HOST_EC2 }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/mypoints.pem
          chmod 400 ~/.ssh/mypoints.pem
          cat >>~/.ssh/config<<END
          Host development
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/mypoints.pem
            StrictHostKeyChecking=no
          END
      - name: connect EC2 -> remove all container -> pull from registry -> start #big bang deployment strategy
        run: ssh development 'docker rm -f $(docker ps -a -q) || true && docker pull hawtz/mypoints:1.0.0 && docker run -d -p 8080:8080 --name mypoints hawtz/mypoints:1.0.0'