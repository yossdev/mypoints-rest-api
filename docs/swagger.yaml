basePath: /api/v1
definitions:
  auth.Token:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  dto.DeleteReward:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  dto.NewReward:
    properties:
      admin_id:
        type: string
      img:
        type: string
      points:
        type: integer
      title:
        type: string
      value:
        type: integer
    required:
    - admin_id
    - points
    - title
    - value
    type: object
  dto.Profile:
    properties:
      admin_id:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      img:
        type: string
      name:
        type: string
      points:
        type: integer
      status:
        type: boolean
      updated_at:
        type: string
    type: object
  dto.RowsAffected:
    properties:
      rows_affected:
        type: integer
    type: object
  dto.UpdateReward:
    properties:
      img:
        type: string
      points:
        type: integer
      title:
        type: string
      value:
        type: integer
    required:
    - points
    - title
    - value
    type: object
  github.com_yossdev_mypoints-rest-api_src_admins_dto.AccountCreated:
    properties:
      rows_affected:
        type: integer
    type: object
  github.com_yossdev_mypoints-rest-api_src_admins_dto.AccountUpdated:
    properties:
      rows_affected:
        type: integer
    type: object
  github.com_yossdev_mypoints-rest-api_src_admins_dto.SignInReq:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  github.com_yossdev_mypoints-rest-api_src_admins_dto.SignUpReq:
    properties:
      email:
        type: string
      img:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  github.com_yossdev_mypoints-rest-api_src_admins_dto.UpdateAccount:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    type: object
  github.com_yossdev_mypoints-rest-api_src_admins_dto.UpdateAvatar:
    properties:
      img:
        type: string
    required:
    - img
    type: object
  github.com_yossdev_mypoints-rest-api_src_agents_dto.AccountCreated:
    properties:
      rows_affected:
        type: integer
    type: object
  github.com_yossdev_mypoints-rest-api_src_agents_dto.AccountUpdated:
    properties:
      rows_affected:
        type: integer
    type: object
  github.com_yossdev_mypoints-rest-api_src_agents_dto.SignInReq:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  github.com_yossdev_mypoints-rest-api_src_agents_dto.SignUpReq:
    properties:
      admin_id:
        type: string
      email:
        type: string
      img:
        type: string
      name:
        type: string
      password:
        type: string
      status:
        type: boolean
    required:
    - admin_id
    - email
    - name
    - password
    type: object
  github.com_yossdev_mypoints-rest-api_src_agents_dto.UpdateAccount:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    type: object
  github.com_yossdev_mypoints-rest-api_src_agents_dto.UpdateAvatar:
    properties:
      img:
        type: string
    required:
    - img
    type: object
host: server.mypoints.site
info:
  contact:
    email: zenhanprogram@gmail.com
    name: MyPoints Team Support
  description: This is an auto-generated API Docs.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://swagger.io/terms/
  title: MyPoints API
  version: "1.0"
paths:
  /:id/agent:
    post:
      consumes:
      - application/json
      description: create agent account by admins.
      parameters:
      - description: body request
        in: body
        name: signUp
        required: true
        schema:
          $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_agents_dto.SignUpReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_agents_dto.AccountCreated'
      summary: admins can create agent account with this api
      tags:
      - Agent
  /admin/login:
    post:
      consumes:
      - application/json
      description: check admins by checking given email and password.
      parameters:
      - description: body request
        in: body
        name: signIn
        required: true
        schema:
          $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_admins_dto.SignInReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.Token'
      summary: check admins by given email return jwt token if successfully signIn
      tags:
      - Admin
  /admin/profile/:id:
    put:
      consumes:
      - application/json
      description: update admin data by id.
      parameters:
      - description: body request
        in: body
        name: updateAccount
        required: true
        schema:
          $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_admins_dto.UpdateAccount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_admins_dto.AccountUpdated'
      summary: update admin data
      tags:
      - Admin
  /admin/profile/avatar/:id:
    put:
      consumes:
      - application/json
      description: update admin photo profile by id.
      parameters:
      - description: body request
        in: body
        name: updateAvatar
        required: true
        schema:
          $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_admins_dto.UpdateAvatar'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_admins_dto.AccountUpdated'
      summary: update admin photo profile
      tags:
      - Admin
  /admin/signup:
    post:
      consumes:
      - application/json
      description: create admin account.
      parameters:
      - description: body request
        in: body
        name: signUp
        required: true
        schema:
          $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_admins_dto.SignUpReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_admins_dto.AccountCreated'
      summary: admins can create from register page
      tags:
      - Admin
  /login:
    post:
      consumes:
      - application/json
      description: check agent by checking given email and password.
      parameters:
      - description: body request
        in: body
        name: signIn
        required: true
        schema:
          $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_agents_dto.SignInReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.Token'
      summary: check agent by given email return jwt token if successfully signIn
      tags:
      - Agent
  /profile/:id:
    get:
      consumes:
      - application/json
      description: Get agent data by id.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Profile'
      summary: get agent data
      tags:
      - Agent
    put:
      consumes:
      - application/json
      description: update agent data by id.
      parameters:
      - description: body request
        in: body
        name: updateAccount
        required: true
        schema:
          $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_agents_dto.UpdateAccount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_agents_dto.AccountUpdated'
      summary: update agent data
      tags:
      - Agent
  /profile/avatar/:id:
    put:
      consumes:
      - application/json
      description: update agent photo profile by id.
      parameters:
      - description: body request
        in: body
        name: updateAvatar
        required: true
        schema:
          $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_agents_dto.UpdateAvatar'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_agents_dto.AccountUpdated'
      summary: update agent photo profile
      tags:
      - Agent
  /reward/:id:
    delete:
      consumes:
      - application/json
      description: soft delete reward data by id.
      parameters:
      - description: body request
        in: body
        name: deleteReward
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteReward'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RowsAffected'
      summary: soft delete reward data
      tags:
      - Reward
    post:
      consumes:
      - application/json
      description: create reward by admins.
      parameters:
      - description: body request
        in: body
        name: newReward
        required: true
        schema:
          $ref: '#/definitions/dto.NewReward'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RowsAffected'
      summary: admins can create reward
      tags:
      - Admin
  /reward/:id/:rewardId:
    put:
      consumes:
      - application/json
      description: update reward data by id.
      parameters:
      - description: body request
        in: body
        name: updateReward
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateReward'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RowsAffected'
      summary: update reward data
      tags:
      - Reward
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
