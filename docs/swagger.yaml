basePath: /api/v1
definitions:
  auth.Token:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  dto.AccountCreated:
    properties:
      rows_affected:
        type: integer
    type: object
  dto.SignUpReq:
    properties:
      admin_id:
        type: string
      email:
        type: string
      img:
        type: string
      name:
        type: string
      password:
        type: string
      status:
        type: boolean
    required:
    - admin_id
    - email
    - name
    - password
    type: object
  github.com_yossdev_mypoints-rest-api_src_admins_dto.SignInReq:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  github.com_yossdev_mypoints-rest-api_src_agents_dto.SignInReq:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: zenhanprogram@gmail.com
    name: MyPoints Team Support
  description: This is an auto-generated API Docs.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://swagger.io/terms/
  title: MyPoints API
  version: "1.0"
paths:
  /:id/agent:
    post:
      consumes:
      - application/json
      description: create agent account by admins.
      parameters:
      - description: body request
        in: body
        name: signUp
        required: true
        schema:
          $ref: '#/definitions/dto.SignUpReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.AccountCreated'
      summary: admins can create agent account with this api
      tags:
      - Agent
  /admin/login:
    post:
      consumes:
      - application/json
      description: check admins by checking given email and password.
      parameters:
      - description: body request
        in: body
        name: signIn
        required: true
        schema:
          $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_admins_dto.SignInReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.Token'
      summary: check admins by given email return jwt token if successfully signIn
      tags:
      - Admin
  /login:
    post:
      consumes:
      - application/json
      description: check agent by checking given email and password.
      parameters:
      - description: body request
        in: body
        name: signIn
        required: true
        schema:
          $ref: '#/definitions/github.com_yossdev_mypoints-rest-api_src_agents_dto.SignInReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.Token'
      summary: check agent by given email return jwt token if successfully signIn
      tags:
      - Agent
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
